================================================================================
PYTEST PROFILE REPORT
================================================================================

Test: tests/utils/test_git_workflows.py::TestGitBranchOperations::test_branch_exists_false
Duration: 1.490 seconds
Profile file: tests_utils_test_git_workflows__TestGitBranchOperations__test_branch_exists_false.prof

SUMMARY
--------------------------------------------------------------------------------
Wed Oct  8 07:59:45 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGitBranchOperations__test_branch_exists_false.prof

         15107 function calls (14911 primitive calls) in 1.490 seconds


TOP FUNCTIONS BY CUMULATIVE TIME
--------------------------------------------------------------------------------
This shows functions sorted by total time spent, including time in called functions.

Wed Oct  8 07:59:45 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGitBranchOperations__test_branch_exists_false.prof

         15107 function calls (14911 primitive calls) in 1.490 seconds

   Ordered by: cumulative time
   List reduced from 914 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.490    1.490 runner.py:114(pytest_runtest_protocol)
        1    0.000    0.000    1.490    1.490 runner.py:122(runtestprotocol)
    24/11    0.000    0.000    1.368    0.124 _hooks.py:497(__call__)
        3    0.000    0.000    1.368    0.456 runner.py:230(call_and_report)
    24/11    0.000    0.000    1.368    0.124 _manager.py:111(_hookexec)
    24/11    0.000    0.000    1.368    0.124 _callers.py:76(_multicall)
        3    0.000    0.000    1.367    0.456 runner.py:323(from_call)
        3    0.000    0.000    1.367    0.456 runner.py:246(<lambda>)
        9    0.000    0.000    1.047    0.116 base.py:333(close)
       18    1.042    0.058    1.042    0.058 {built-in method gc.collect}
        1    0.000    0.000    0.930    0.930 runner.py:167(pytest_runtest_call)
        1    0.000    0.000    0.930    0.930 python.py:1669(runtest)
        1    0.000    0.000    0.930    0.930 python.py:150(pytest_pyfunc_call)
        1    0.000    0.000    0.930    0.930 test_git_workflows.py:2193(test_branch_exists_false)
    85/72    0.000    0.000    0.705    0.010 {built-in method builtins.next}
        2    0.000    0.000    0.701    0.350 branches.py:319(branch_exists)
       17    0.000    0.000    0.697    0.041 contextlib.py:145(__exit__)
        5    0.000    0.000    0.580    0.116 base.py:327(__del__)
        8    0.000    0.000    0.471    0.059 core.py:61(_safe_repo_context)
        4    0.000    0.000    0.466    0.117 core.py:36(_close_repo_safely)
        2    0.000    0.000    0.461    0.231 repository.py:11(is_git_repository)
        1    0.000    0.000    0.435    0.435 runner.py:162(pytest_runtest_setup)
        1    0.000    0.000    0.435    0.435 runner.py:498(setup)
        1    0.000    0.000    0.435    0.435 python.py:1673(setup)
        1    0.000    0.000    0.435    0.435 fixtures.py:716(_fillfixtures)
     10/7    0.000    0.000    0.435    0.062 fixtures.py:527(getfixturevalue)
     14/7    0.000    0.000    0.435    0.062 fixtures.py:566(_get_active_fixturedef)
      6/5    0.000    0.000    0.434    0.087 fixtures.py:1074(execute)
        4    0.000    0.000    0.434    0.109 fixtures.py:1166(pytest_fixture_setup)
        4    0.000    0.000    0.434    0.109 fixtures.py:916(call_fixture_func)
        1    0.000    0.000    0.432    0.432 conftest.py:32(git_repo_with_files)
        1    0.000    0.000    0.276    0.276 base.py:1126(commit)
        1    0.000    0.000    0.273    0.273 commit.py:561(create_from_tree)
        1    0.000    0.000    0.264    0.264 symbolic.py:724(create)
        1    0.000    0.000    0.264    0.264 symbolic.py:680(_create)
      103    0.245    0.002    0.245    0.002 {method 'readline' of '_io.BufferedReader' objects}
        8    0.000    0.000    0.245    0.031 cmd.py:1676(__get_object_header)
        3    0.000    0.000    0.148    0.049 cmd.py:1540(_call_process)
        3    0.000    0.000    0.148    0.049 cmd.py:1096(execute)
        1    0.000    0.000    0.146    0.146 base.py:1301(init)
        1    0.000    0.000    0.143    0.143 cmd.py:1003(<lambda>)
        2    0.000    0.000    0.142    0.071 symbolic.py:421(set_reference)
        2    0.000    0.000    0.140    0.070 symbolic.py:552(log_append)
        1    0.000    0.000    0.140    0.140 subprocess.py:1175(communicate)
        1    0.000    0.000    0.139    0.139 subprocess.py:1613(_communicate)
        2    0.000    0.000    0.139    0.070 threading.py:1056(join)
        2    0.000    0.000    0.139    0.070 {method 'join' of '_thread._ThreadHandle' objects}
      2/1    0.000    0.000    0.139    0.139 threading.py:998(_bootstrap)
      2/1    0.000    0.000    0.139    0.139 threading.py:1025(_bootstrap_inner)
      2/1    0.000    0.000    0.139    0.139 threading.py:981(run)



TOP FUNCTIONS BY INTERNAL TIME (TIME)
--------------------------------------------------------------------------------
This shows functions sorted by time spent in the function itself (excluding subcalls).

Wed Oct  8 07:59:45 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGitBranchOperations__test_branch_exists_false.prof

         15107 function calls (14911 primitive calls) in 1.490 seconds

   Ordered by: internal time
   List reduced from 914 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       18    1.042    0.058    1.042    0.058 {built-in method gc.collect}
      103    0.245    0.002    0.245    0.002 {method 'readline' of '_io.BufferedReader' objects}
     10/9    0.138    0.014    0.000    0.000 {method 'read' of '_io.BufferedReader' objects}
       63    0.023    0.000    0.023    0.000 {built-in method _io.open}
        3    0.007    0.002    0.007    0.002 {built-in method _winapi.CreateProcess}
        5    0.005    0.001    0.005    0.001 {built-in method _winapi.WaitForSingleObject}
       11    0.002    0.000    0.002    0.000 {built-in method nt.open}
        8    0.002    0.000    0.002    0.000 {built-in method nt.rename}
       13    0.001    0.000    0.001    0.000 {built-in method nt.mkdir}
       39    0.001    0.000    0.001    0.000 {method '__exit__' of '_io._IOBase' objects}
       44    0.001    0.000    0.001    0.000 {built-in method nt._path_isdir}
       18    0.001    0.000    0.001    0.000 {built-in method nt._path_exists}
       24    0.001    0.000    0.001    0.000 {built-in method nt.stat}
       30    0.001    0.000    0.001    0.000 {built-in method nt._path_isfile}
        1    0.001    0.001    0.001    0.001 pathlib.py:173(find_prefixed)
       11    0.001    0.000    0.001    0.000 {built-in method nt.chmod}
       33    0.001    0.000    0.001    0.000 {built-in method nt.write}
        5    0.000    0.000    0.000    0.000 {built-in method nt.remove}
       12    0.000    0.000    0.000    0.000 {built-in method nt.scandir}
        9    0.000    0.000    0.001    0.000 config.py:439(_read)
       10    0.000    0.000    0.000    0.000 {built-in method nt.close}
        8    0.000    0.000    0.000    0.000 {built-in method nt._getfinalpathname}
       20    0.000    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}
        7    0.000    0.000    0.000    0.000 {built-in method builtins.dir}
      2/1    0.000    0.000    0.139    0.139 threading.py:1025(_bootstrap_inner)
     1165    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
      124    0.000    0.000    0.000    0.000 <frozen ntpath>:99(join)
        4    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedWriter' objects}
        1    0.000    0.000    0.000    0.000 {built-in method nt.symlink}
     1260    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
    24/11    0.000    0.000    1.368    0.124 _callers.py:76(_multicall)
        6    0.000    0.000    0.000    0.000 {built-in method nt.lstat}
        5    0.000    0.000    0.000    0.000 glob.py:424(select_wildcard)
        6    0.000    0.000    0.000    0.000 {built-in method nt.putenv}
        6    0.000    0.000    0.000    0.000 {built-in method nt.access}
        7    0.000    0.000    0.001    0.000 configparser.py:1343(__init__)
        7    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
        5    0.000    0.000    0.007    0.001 base.py:172(__init__)
    85/72    0.000    0.000    0.705    0.010 {built-in method builtins.next}
      235    0.000    0.000    0.000    0.000 <frozen os>:711(__getitem__)
        2    0.000    0.000    0.139    0.070 {method 'join' of '_thread._ThreadHandle' objects}
        6    0.000    0.000    0.000    0.000 {method 'read' of '_io.FileIO' objects}
      117    0.000    0.000    0.000    0.000 cmd.py:989(__getattribute__)
        2    0.000    0.000    0.000    0.000 {built-in method _winapi.TerminateProcess}
        9    0.000    0.000    1.047    0.116 base.py:333(close)
       33    0.000    0.000    0.000    0.000 _local.py:257(_parse_path)
      327    0.000    0.000    0.000    0.000 {built-in method nt._path_splitroot_ex}
       17    0.000    0.000    0.000    0.000 symbolic.py:172(_check_ref_name_valid)
    34/26    0.000    0.000    0.004    0.000 config.py:596(read)
       17    0.000    0.000    0.015    0.001 symbolic.py:220(_get_ref_info_helper)



CALLER INFORMATION (Top 20)
--------------------------------------------------------------------------------
This shows which functions called the top functions.

   Ordered by: cumulative time
   List reduced from 914 to 20 due to restriction <20>

Function                                              was called by...
                                                          ncalls  tottime  cumtime
runner.py:114(pytest_runtest_protocol)                <- 
runner.py:122(runtestprotocol)                        <-       1    0.000    1.490  runner.py:114(pytest_runtest_protocol)
_hooks.py:497(__call__)                               <-       5    0.000    0.000  fixtures.py:1053(finish)
                                                               4    0.000    0.434  fixtures.py:1074(execute)
                                                               1    0.000    0.930  python.py:1669(runtest)
                                                               2    0.000    0.000  runner.py:114(pytest_runtest_protocol)
                                                               6    0.000    0.001  runner.py:230(call_and_report)
                                                               3    0.000    1.367  runner.py:246(<lambda>)
                                                               3    0.000    0.000  terminal.py:605(pytest_runtest_logreport)
runner.py:230(call_and_report)                        <-       3    0.000    1.368  runner.py:122(runtestprotocol)
_manager.py:111(_hookexec)                            <-   24/11    0.000    1.368  _hooks.py:497(__call__)
_callers.py:76(_multicall)                            <-   24/11    0.000    1.368  _manager.py:111(_hookexec)
runner.py:323(from_call)                              <-       3    0.000    1.367  runner.py:230(call_and_report)
runner.py:246(<lambda>)                               <-       3    0.000    1.367  runner.py:323(from_call)
base.py:333(close)                                    <-       5    0.000    0.580  base.py:327(__del__)
                                                               4    0.000    0.466  core.py:36(_close_repo_safely)
{built-in method gc.collect}                          <-      18    1.042    1.042  base.py:333(close)
runner.py:167(pytest_runtest_call)                    <-       1    0.000    0.930  _callers.py:76(_multicall)
python.py:1669(runtest)                               <-       1    0.000    0.930  runner.py:167(pytest_runtest_call)
python.py:150(pytest_pyfunc_call)                     <-       1    0.000    0.930  _callers.py:76(_multicall)
test_git_workflows.py:2193(test_branch_exists_false)  <-       1    0.000    0.930  python.py:150(pytest_pyfunc_call)
{built-in method builtins.next}                       <-       4    0.000    0.000  <frozen os>:288(walk)
                                                               5    0.000    0.000  _callers.py:25(run_old_style_hookwrapper)
                                                              26    0.000    0.000  _callers.py:76(_multicall)
                                                              17    0.000    0.004  contextlib.py:136(__enter__)
                                                              17    0.000    0.697  contextlib.py:145(__exit__)
                                                               3    0.000    0.002  fixtures.py:916(call_fixture_func)
                                                               3    0.000    0.002  fixtures.py:934(_teardown_yield_fixture)
                                                               1    0.000    0.000  nodes.py:365(get_closest_marker)
                                                               5    0.000    0.000  tempfile.py:243(_mkstemp_inner)
branches.py:319(branch_exists)                        <-       2    0.000    0.701  test_git_workflows.py:2193(test_branch_exists_false)
contextlib.py:145(__exit__)                           <-       2    0.000    0.237  branches.py:319(branch_exists)
                                                               1    0.000    0.000  capture.py:892(pytest_runtest_setup)
                                                               1    0.000    0.000  capture.py:897(pytest_runtest_call)
                                                               1    0.000    0.000  capture.py:902(pytest_runtest_teardown)
                                                               3    0.000    0.000  cmd.py:233(_safer_popen_windows)
                                                               1    0.000    0.000  logging.py:836(pytest_runtest_setup)
                                                               1    0.000    0.000  logging.py:845(pytest_runtest_call)
                                                               1    0.000    0.000  logging.py:852(pytest_runtest_teardown)
                                                               2    0.000    0.459  repository.py:11(is_git_repository)
                                                               3    0.000    0.000  subprocess.py:1345(_get_handles)
                                                               1    0.000    0.000  warnings.py:85(pytest_runtest_protocol)
base.py:327(__del__)                                  <-       1    0.000    0.122  runner.py:122(runtestprotocol)
                                                               2    0.000    0.229  test_git_workflows.py:2193(test_branch_exists_false)
                                                               2    0.000    0.230  {built-in method builtins.next}
core.py:61(_safe_repo_context)                        <-       8    0.000    0.471  {built-in method builtins.next}
core.py:36(_close_repo_safely)                        <-       4    0.000    0.466  core.py:61(_safe_repo_context)


