================================================================================
PYTEST PROFILE REPORT
================================================================================

Test: tests/utils/test_git_workflows.py::TestGetBranchDiff::test_get_branch_diff_valid_diff
Duration: 2.931 seconds
Profile file: tests_utils_test_git_workflows__TestGetBranchDiff__test_get_branch_diff_valid_diff.prof

SUMMARY
--------------------------------------------------------------------------------
Wed Oct  8 08:00:21 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGetBranchDiff__test_get_branch_diff_valid_diff.prof

         24315 function calls (24076 primitive calls) in 2.930 seconds


TOP FUNCTIONS BY CUMULATIVE TIME
--------------------------------------------------------------------------------
This shows functions sorted by total time spent, including time in called functions.

Wed Oct  8 08:00:21 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGetBranchDiff__test_get_branch_diff_valid_diff.prof

         24315 function calls (24076 primitive calls) in 2.930 seconds

   Ordered by: cumulative time
   List reduced from 933 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.930    2.930 runner.py:114(pytest_runtest_protocol)
        1    0.000    0.000    2.930    2.930 runner.py:122(runtestprotocol)
    24/11    0.000    0.000    2.804    0.255 _hooks.py:497(__call__)
        3    0.000    0.000    2.804    0.935 runner.py:230(call_and_report)
    24/11    0.000    0.000    2.804    0.255 _manager.py:111(_hookexec)
    24/11    0.000    0.000    2.804    0.255 _callers.py:76(_multicall)
        3    0.000    0.000    2.803    0.934 runner.py:323(from_call)
        3    0.000    0.000    2.803    0.934 runner.py:246(<lambda>)
        1    0.000    0.000    2.368    2.368 runner.py:167(pytest_runtest_call)
        1    0.000    0.000    2.368    2.368 python.py:1669(runtest)
        1    0.000    0.000    2.368    2.368 python.py:150(pytest_pyfunc_call)
        1    0.000    0.000    2.368    2.368 test_git_workflows.py:2510(test_get_branch_diff_valid_diff)
       17    0.000    0.000    2.136    0.126 base.py:333(close)
       34    2.131    0.063    2.131    0.063 {built-in method gc.collect}
        1    0.000    0.000    1.553    1.553 diffs.py:92(get_branch_diff)
   112/99    0.000    0.000    1.504    0.015 {built-in method builtins.next}
       25    0.000    0.000    1.492    0.060 contextlib.py:145(__exit__)
        9    0.000    0.000    1.153    0.128 base.py:327(__del__)
        4    0.000    0.000    1.009    0.252 repository.py:11(is_git_repository)
       16    0.000    0.000    0.991    0.062 core.py:61(_safe_repo_context)
        8    0.000    0.000    0.983    0.123 core.py:36(_close_repo_safely)
        1    0.000    0.000    0.440    0.440 branches.py:319(branch_exists)
        1    0.000    0.000    0.432    0.432 runner.py:162(pytest_runtest_setup)
        1    0.000    0.000    0.432    0.432 runner.py:498(setup)
        1    0.000    0.000    0.432    0.432 python.py:1673(setup)
        1    0.000    0.000    0.432    0.432 fixtures.py:716(_fillfixtures)
     10/7    0.000    0.000    0.432    0.062 fixtures.py:527(getfixturevalue)
     14/7    0.000    0.000    0.432    0.062 fixtures.py:566(_get_active_fixturedef)
      6/5    0.000    0.000    0.431    0.086 fixtures.py:1074(execute)
        4    0.000    0.000    0.431    0.108 fixtures.py:1166(pytest_fixture_setup)
        4    0.000    0.000    0.431    0.108 fixtures.py:916(call_fixture_func)
        1    0.000    0.000    0.429    0.429 conftest.py:32(git_repo_with_files)
        5    0.000    0.000    0.424    0.085 cmd.py:1540(_call_process)
        5    0.000    0.000    0.424    0.085 cmd.py:1096(execute)
        3    0.000    0.000    0.418    0.139 cmd.py:1003(<lambda>)
        3    0.000    0.000    0.407    0.136 subprocess.py:1175(communicate)
        3    0.000    0.000    0.405    0.135 subprocess.py:1613(_communicate)
        6    0.000    0.000    0.405    0.068 threading.py:1056(join)
        6    0.001    0.000    0.405    0.067 {method 'join' of '_thread._ThreadHandle' objects}
      6/3    0.000    0.000    0.404    0.135 threading.py:998(_bootstrap)
      6/3    0.001    0.000    0.404    0.135 threading.py:1025(_bootstrap_inner)
      6/3    0.000    0.000    0.404    0.135 threading.py:981(run)
      6/3    0.000    0.000    0.404    0.135 subprocess.py:1608(_readerthread)
    22/19    0.000    0.000    0.403    0.021 {method 'close' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.352    0.352 branches.py:57(get_default_branch_name)
        1    0.000    0.000    0.349    0.349 branches.py:14(get_current_branch_name)
        2    0.000    0.000    0.309    0.154 base.py:1126(commit)
        2    0.000    0.000    0.284    0.142 commit.py:561(create_from_tree)
        2    0.000    0.000    0.259    0.130 symbolic.py:724(create)
        2    0.000    0.000    0.259    0.130 symbolic.py:680(_create)



TOP FUNCTIONS BY INTERNAL TIME (TIME)
--------------------------------------------------------------------------------
This shows functions sorted by time spent in the function itself (excluding subcalls).

Wed Oct  8 08:00:21 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGetBranchDiff__test_get_branch_diff_valid_diff.prof

         24315 function calls (24076 primitive calls) in 2.930 seconds

   Ordered by: internal time
   List reduced from 933 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       34    2.131    0.063    2.131    0.063 {built-in method gc.collect}
    20/17    0.403    0.020    0.000    0.000 {method 'read' of '_io.BufferedReader' objects}
      203    0.241    0.001    0.241    0.001 {method 'readline' of '_io.BufferedReader' objects}
      109    0.067    0.001    0.068    0.001 {built-in method _io.open}
       21    0.020    0.001    0.020    0.001 {built-in method nt.open}
        5    0.014    0.003    0.014    0.003 {built-in method _winapi.CreateProcess}
        7    0.005    0.001    0.005    0.001 {built-in method _winapi.WaitForSingleObject}
       14    0.003    0.000    0.003    0.000 {built-in method nt.rename}
       18    0.002    0.000    0.002    0.000 {built-in method nt.mkdir}
       73    0.002    0.000    0.002    0.000 {method '__exit__' of '_io._IOBase' objects}
       80    0.002    0.000    0.002    0.000 {built-in method nt._path_isdir}
       53    0.001    0.000    0.001    0.000 {built-in method nt._path_isfile}
       29    0.001    0.000    0.001    0.000 {built-in method nt._path_exists}
       65    0.001    0.000    0.001    0.000 {built-in method nt.write}
       19    0.001    0.000    0.001    0.000 {built-in method nt.chmod}
       10    0.001    0.000    0.001    0.000 {built-in method nt.remove}
       40    0.001    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}
       17    0.001    0.000    0.002    0.000 config.py:439(_read)
      6/3    0.001    0.000    0.404    0.135 threading.py:1025(_bootstrap_inner)
       20    0.001    0.000    0.001    0.000 {built-in method nt.close}
       24    0.001    0.000    0.001    0.000 {built-in method nt.stat}
        1    0.001    0.001    0.001    0.001 pathlib.py:173(find_prefixed)
       13    0.001    0.000    0.001    0.000 {built-in method builtins.dir}
     2105    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
       16    0.001    0.000    0.001    0.000 {built-in method nt.scandir}
        6    0.001    0.000    0.405    0.067 {method 'join' of '_thread._ThreadHandle' objects}
      222    0.000    0.000    0.001    0.000 <frozen ntpath>:99(join)
       11    0.000    0.000    0.000    0.000 {built-in method nt.access}
        6    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedWriter' objects}
        8    0.000    0.000    0.000    0.000 {built-in method nt._getfinalpathname}
       13    0.000    0.000    0.001    0.000 configparser.py:1343(__init__)
     1827    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
      231    0.000    0.000    0.000    0.000 cmd.py:989(__getattribute__)
   112/99    0.000    0.000    1.504    0.015 {built-in method builtins.next}
       17    0.000    0.000    2.136    0.126 base.py:333(close)
       37    0.000    0.000    0.001    0.000 symbolic.py:172(_check_ref_name_valid)
       10    0.000    0.000    0.000    0.000 {built-in method nt.putenv}
        8    0.000    0.000    0.000    0.000 {built-in method nt.lstat}
        9    0.000    0.000    0.011    0.001 base.py:172(__init__)
      401    0.000    0.000    0.001    0.000 <frozen os>:711(__getitem__)
       37    0.000    0.000    0.037    0.001 symbolic.py:220(_get_ref_info_helper)
       10    0.000    0.000    0.008    0.001 loose.py:177(store)
      552    0.000    0.000    0.000    0.000 {built-in method nt._path_splitroot_ex}
        1    0.000    0.000    0.000    0.000 {built-in method nt.symlink}
        7    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
    24/11    0.000    0.000    2.804    0.255 _callers.py:76(_multicall)
        4    0.000    0.000    0.000    0.000 {built-in method nt.chdir}
      419    0.000    0.000    0.000    0.000 <frozen os>:785(encodekey)
        5    0.000    0.000    0.000    0.000 glob.py:424(select_wildcard)
       13    0.000    0.000    0.002    0.000 configparser.py:629(__init__)



CALLER INFORMATION (Top 20)
--------------------------------------------------------------------------------
This shows which functions called the top functions.

   Ordered by: cumulative time
   List reduced from 933 to 20 due to restriction <20>

Function                                                     was called by...
                                                                 ncalls  tottime  cumtime
runner.py:114(pytest_runtest_protocol)                       <- 
runner.py:122(runtestprotocol)                               <-       1    0.000    2.930  runner.py:114(pytest_runtest_protocol)
_hooks.py:497(__call__)                                      <-       5    0.000    0.000  fixtures.py:1053(finish)
                                                                      4    0.000    0.431  fixtures.py:1074(execute)
                                                                      1    0.000    2.368  python.py:1669(runtest)
                                                                      2    0.000    0.000  runner.py:114(pytest_runtest_protocol)
                                                                      6    0.000    0.001  runner.py:230(call_and_report)
                                                                      3    0.000    2.803  runner.py:246(<lambda>)
                                                                      3    0.000    0.000  terminal.py:605(pytest_runtest_logreport)
runner.py:230(call_and_report)                               <-       3    0.000    2.804  runner.py:122(runtestprotocol)
_manager.py:111(_hookexec)                                   <-   24/11    0.000    2.804  _hooks.py:497(__call__)
_callers.py:76(_multicall)                                   <-   24/11    0.000    2.804  _manager.py:111(_hookexec)
runner.py:323(from_call)                                     <-       3    0.000    2.803  runner.py:230(call_and_report)
runner.py:246(<lambda>)                                      <-       3    0.000    2.803  runner.py:323(from_call)
runner.py:167(pytest_runtest_call)                           <-       1    0.000    2.368  _callers.py:76(_multicall)
python.py:1669(runtest)                                      <-       1    0.000    2.368  runner.py:167(pytest_runtest_call)
python.py:150(pytest_pyfunc_call)                            <-       1    0.000    2.368  _callers.py:76(_multicall)
test_git_workflows.py:2510(test_get_branch_diff_valid_diff)  <-       1    0.000    2.368  python.py:150(pytest_pyfunc_call)
base.py:333(close)                                           <-       9    0.000    1.153  base.py:327(__del__)
                                                                      8    0.000    0.983  core.py:36(_close_repo_safely)
{built-in method gc.collect}                                 <-      34    2.131    2.131  base.py:333(close)
diffs.py:92(get_branch_diff)                                 <-       1    0.000    1.553  test_git_workflows.py:2510(test_get_branch_diff_valid_diff)
{built-in method builtins.next}                              <-      12    0.000    0.000  <frozen os>:288(walk)
                                                                      5    0.000    0.000  _callers.py:25(run_old_style_hookwrapper)
                                                                     26    0.000    0.000  _callers.py:76(_multicall)
                                                                     25    0.000    0.008  contextlib.py:136(__enter__)
                                                                     25    0.000    1.492  contextlib.py:145(__exit__)
                                                                      3    0.000    0.002  fixtures.py:916(call_fixture_func)
                                                                      3    0.000    0.002  fixtures.py:934(_teardown_yield_fixture)
                                                                      1    0.000    0.000  nodes.py:365(get_closest_marker)
                                                                      8    0.000    0.000  tempfile.py:243(_mkstemp_inner)
contextlib.py:145(__exit__)                                  <-       1    0.000    0.115  branches.py:14(get_current_branch_name)
                                                                      1    0.000    0.115  branches.py:57(get_default_branch_name)
                                                                      1    0.000    0.135  branches.py:319(branch_exists)
                                                                      1    0.000    0.000  capture.py:892(pytest_runtest_setup)
                                                                      1    0.000    0.000  capture.py:897(pytest_runtest_call)
                                                                      1    0.000    0.000  capture.py:902(pytest_runtest_teardown)
                                                                      5    0.000    0.000  cmd.py:233(_safer_popen_windows)
                                                                      1    0.000    0.121  diffs.py:92(get_branch_diff)
                                                                      1    0.000    0.000  logging.py:836(pytest_runtest_setup)
                                                                      1    0.000    0.000  logging.py:845(pytest_runtest_call)
                                                                      1    0.000    0.000  logging.py:852(pytest_runtest_teardown)
                                                                      4    0.000    1.006  repository.py:11(is_git_repository)
                                                                      5    0.000    0.000  subprocess.py:1345(_get_handles)
                                                                      1    0.000    0.000  warnings.py:85(pytest_runtest_protocol)
base.py:327(__del__)                                         <-       2    0.000    0.269  diffs.py:92(get_branch_diff)
                                                                      1    0.000    0.126  runner.py:122(runtestprotocol)
                                                                      2    0.000    0.250  test_git_workflows.py:2510(test_get_branch_diff_valid_diff)
                                                                      4    0.000    0.508  {built-in method builtins.next}
repository.py:11(is_git_repository)                          <-       1    0.000    0.232  branches.py:14(get_current_branch_name)
                                                                      1    0.000    0.236  branches.py:57(get_default_branch_name)
                                                                      1    0.000    0.304  branches.py:319(branch_exists)
                                                                      1    0.000    0.238  diffs.py:92(get_branch_diff)
core.py:61(_safe_repo_context)                               <-      16    0.000    0.991  {built-in method builtins.next}


