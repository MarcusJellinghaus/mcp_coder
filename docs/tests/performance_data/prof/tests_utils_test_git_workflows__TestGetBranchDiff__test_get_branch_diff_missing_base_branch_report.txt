================================================================================
PYTEST PROFILE REPORT
================================================================================

Test: tests/utils/test_git_workflows.py::TestGetBranchDiff::test_get_branch_diff_missing_base_branch
Duration: 2.243 seconds
Profile file: tests_utils_test_git_workflows__TestGetBranchDiff__test_get_branch_diff_missing_base_branch.prof

SUMMARY
--------------------------------------------------------------------------------
Wed Oct  8 08:00:29 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGetBranchDiff__test_get_branch_diff_missing_base_branch.prof

         16432 function calls (16230 primitive calls) in 2.243 seconds


TOP FUNCTIONS BY CUMULATIVE TIME
--------------------------------------------------------------------------------
This shows functions sorted by total time spent, including time in called functions.

Wed Oct  8 08:00:29 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGetBranchDiff__test_get_branch_diff_missing_base_branch.prof

         16432 function calls (16230 primitive calls) in 2.243 seconds

   Ordered by: cumulative time
   List reduced from 950 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.243    2.243 runner.py:114(pytest_runtest_protocol)
        1    0.000    0.000    2.243    2.243 runner.py:122(runtestprotocol)
    24/11    0.000    0.000    2.084    0.189 _hooks.py:497(__call__)
        3    0.000    0.000    2.084    0.695 runner.py:230(call_and_report)
    24/11    0.000    0.000    2.084    0.189 _manager.py:111(_hookexec)
    24/11    0.000    0.000    2.084    0.189 _callers.py:76(_multicall)
        3    0.000    0.000    2.083    0.694 runner.py:323(from_call)
        3    0.000    0.000    2.083    0.694 runner.py:246(<lambda>)
       13    0.000    0.000    1.797    0.138 base.py:333(close)
       26    1.791    0.069    1.791    0.069 {built-in method gc.collect}
        1    0.000    0.000    1.645    1.645 runner.py:167(pytest_runtest_call)
        1    0.000    0.000    1.645    1.645 python.py:1669(runtest)
        1    0.000    0.000    1.645    1.645 python.py:150(pytest_pyfunc_call)
        1    0.000    0.000    1.645    1.645 test_git_workflows.py:2613(test_get_branch_diff_missing_base_branch)
        1    0.000    0.000    1.492    1.492 diffs.py:92(get_branch_diff)
    87/74    0.000    0.000    1.209    0.016 {built-in method builtins.next}
       19    0.000    0.000    1.198    0.063 contextlib.py:145(__exit__)
        7    0.000    0.000    1.000    0.143 base.py:327(__del__)
       12    0.000    0.000    0.803    0.067 core.py:61(_safe_repo_context)
        6    0.000    0.000    0.797    0.133 core.py:36(_close_repo_safely)
        3    0.000    0.000    0.778    0.259 repository.py:11(is_git_repository)
        1    0.000    0.000    0.468    0.468 branches.py:14(get_current_branch_name)
        1    0.000    0.000    0.435    0.435 runner.py:162(pytest_runtest_setup)
        1    0.000    0.000    0.435    0.435 runner.py:498(setup)
        1    0.000    0.000    0.435    0.435 python.py:1673(setup)
        1    0.000    0.000    0.435    0.435 fixtures.py:716(_fillfixtures)
     10/7    0.000    0.000    0.435    0.062 fixtures.py:527(getfixturevalue)
     14/7    0.000    0.000    0.435    0.062 fixtures.py:566(_get_active_fixturedef)
      6/5    0.000    0.000    0.435    0.087 fixtures.py:1074(execute)
        4    0.000    0.000    0.435    0.109 fixtures.py:1166(pytest_fixture_setup)
        4    0.000    0.000    0.435    0.109 fixtures.py:916(call_fixture_func)
        1    0.000    0.000    0.432    0.432 conftest.py:32(git_repo_with_files)
        1    0.000    0.000    0.365    0.365 branches.py:319(branch_exists)
        1    0.000    0.000    0.273    0.273 base.py:1126(commit)
        1    0.000    0.000    0.269    0.269 commit.py:561(create_from_tree)
        1    0.000    0.000    0.259    0.259 symbolic.py:724(create)
        1    0.000    0.000    0.259    0.259 symbolic.py:680(_create)
      125    0.240    0.002    0.240    0.002 {method 'readline' of '_io.BufferedReader' objects}
        8    0.000    0.000    0.239    0.030 cmd.py:1676(__get_object_header)
        3    0.000    0.000    0.151    0.050 cmd.py:1540(_call_process)
        3    0.000    0.000    0.151    0.050 cmd.py:1096(execute)
        1    0.000    0.000    0.148    0.148 base.py:1301(init)
        1    0.000    0.000    0.145    0.145 cmd.py:1003(<lambda>)
        1    0.000    0.000    0.142    0.142 subprocess.py:1175(communicate)
        1    0.000    0.000    0.141    0.141 subprocess.py:1613(_communicate)
        2    0.000    0.000    0.141    0.071 threading.py:1056(join)
        2    0.000    0.000    0.141    0.071 symbolic.py:421(set_reference)
        2    0.000    0.000    0.141    0.071 {method 'join' of '_thread._ThreadHandle' objects}
      2/1    0.000    0.000    0.141    0.141 threading.py:998(_bootstrap)
      2/1    0.000    0.000    0.141    0.141 threading.py:1025(_bootstrap_inner)



TOP FUNCTIONS BY INTERNAL TIME (TIME)
--------------------------------------------------------------------------------
This shows functions sorted by time spent in the function itself (excluding subcalls).

Wed Oct  8 08:00:29 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGetBranchDiff__test_get_branch_diff_missing_base_branch.prof

         16432 function calls (16230 primitive calls) in 2.243 seconds

   Ordered by: internal time
   List reduced from 950 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       26    1.791    0.069    1.791    0.069 {built-in method gc.collect}
      125    0.240    0.002    0.240    0.002 {method 'readline' of '_io.BufferedReader' objects}
     10/9    0.140    0.014    0.000    0.000 {method 'read' of '_io.BufferedReader' objects}
       67    0.024    0.000    0.025    0.000 {built-in method _io.open}
        3    0.007    0.002    0.007    0.002 {built-in method _winapi.CreateProcess}
        5    0.005    0.001    0.005    0.001 {built-in method _winapi.WaitForSingleObject}
       11    0.002    0.000    0.002    0.000 {built-in method nt.open}
       13    0.002    0.000    0.002    0.000 {built-in method nt.mkdir}
        8    0.002    0.000    0.002    0.000 {built-in method nt.rename}
       60    0.001    0.000    0.001    0.000 {built-in method nt._path_isdir}
       42    0.001    0.000    0.001    0.000 {method '__exit__' of '_io._IOBase' objects}
        1    0.001    0.001    0.001    0.001 pathlib.py:173(find_prefixed)
       20    0.001    0.000    0.001    0.000 {built-in method nt._path_exists}
       36    0.001    0.000    0.001    0.000 {built-in method nt._path_isfile}
       24    0.001    0.000    0.001    0.000 {built-in method nt.stat}
       11    0.001    0.000    0.001    0.000 {built-in method nt.chmod}
        8    0.001    0.000    0.001    0.000 {built-in method nt._getfinalpathname}
       11    0.001    0.000    0.002    0.000 config.py:439(_read)
       33    0.001    0.000    0.001    0.000 {built-in method nt.write}
        9    0.001    0.000    0.001    0.000 {built-in method builtins.dir}
        5    0.000    0.000    0.000    0.000 {built-in method nt.remove}
     1455    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
       21    0.000    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}
       10    0.000    0.000    0.000    0.000 {built-in method nt.close}
       11    0.000    0.000    0.000    0.000 {built-in method nt.scandir}
        1    0.000    0.000    0.000    0.000 {built-in method nt.symlink}
      148    0.000    0.000    0.001    0.000 <frozen ntpath>:99(join)
        6    0.000    0.000    0.000    0.000 {built-in method nt.lstat}
      2/1    0.000    0.000    0.141    0.141 threading.py:1025(_bootstrap_inner)
     1335    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
        4    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedWriter' objects}
        9    0.000    0.000    0.001    0.000 configparser.py:1343(__init__)
    24/11    0.000    0.000    2.084    0.189 _callers.py:76(_multicall)
       13    0.000    0.000    1.797    0.138 base.py:333(close)
        7    0.000    0.000    0.009    0.001 base.py:172(__init__)
        6    0.000    0.000    0.000    0.000 {built-in method nt.access}
        6    0.000    0.000    0.000    0.000 {built-in method nt.putenv}
        5    0.000    0.000    0.000    0.000 glob.py:424(select_wildcard)
        2    0.000    0.000    0.000    0.000 {built-in method _winapi.TerminateProcess}
      131    0.000    0.000    0.000    0.000 cmd.py:989(__getattribute__)
        7    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
    87/74    0.000    0.000    1.209    0.016 {built-in method builtins.next}
      237    0.000    0.000    0.000    0.000 <frozen os>:711(__getitem__)
        2    0.000    0.000    0.141    0.071 {method 'join' of '_thread._ThreadHandle' objects}
      378    0.000    0.000    0.000    0.000 {built-in method nt._path_splitroot_ex}
       35    0.000    0.000    0.000    0.000 _local.py:257(_parse_path)
        6    0.000    0.000    0.000    0.000 {method 'read' of '_io.FileIO' objects}
        9    0.000    0.000    0.001    0.000 configparser.py:629(__init__)
       18    0.000    0.000    0.016    0.001 symbolic.py:220(_get_ref_info_helper)
    40/30    0.000    0.000    0.006    0.000 config.py:596(read)



CALLER INFORMATION (Top 20)
--------------------------------------------------------------------------------
This shows which functions called the top functions.

   Ordered by: cumulative time
   List reduced from 950 to 20 due to restriction <20>

Function                                                              was called by...
                                                                          ncalls  tottime  cumtime
runner.py:114(pytest_runtest_protocol)                                <- 
runner.py:122(runtestprotocol)                                        <-       1    0.000    2.243  runner.py:114(pytest_runtest_protocol)
_hooks.py:497(__call__)                                               <-       5    0.000    0.000  fixtures.py:1053(finish)
                                                                               4    0.000    0.435  fixtures.py:1074(execute)
                                                                               1    0.000    1.645  python.py:1669(runtest)
                                                                               2    0.000    0.000  runner.py:114(pytest_runtest_protocol)
                                                                               6    0.000    0.001  runner.py:230(call_and_report)
                                                                               3    0.000    2.083  runner.py:246(<lambda>)
                                                                               3    0.000    0.000  terminal.py:605(pytest_runtest_logreport)
runner.py:230(call_and_report)                                        <-       3    0.000    2.084  runner.py:122(runtestprotocol)
_manager.py:111(_hookexec)                                            <-   24/11    0.000    2.084  _hooks.py:497(__call__)
_callers.py:76(_multicall)                                            <-   24/11    0.000    2.084  _manager.py:111(_hookexec)
runner.py:323(from_call)                                              <-       3    0.000    2.083  runner.py:230(call_and_report)
runner.py:246(<lambda>)                                               <-       3    0.000    2.083  runner.py:323(from_call)
base.py:333(close)                                                    <-       7    0.000    1.000  base.py:327(__del__)
                                                                               6    0.000    0.797  core.py:36(_close_repo_safely)
{built-in method gc.collect}                                          <-      26    1.791    1.791  base.py:333(close)
runner.py:167(pytest_runtest_call)                                    <-       1    0.000    1.645  _callers.py:76(_multicall)
python.py:1669(runtest)                                               <-       1    0.000    1.645  runner.py:167(pytest_runtest_call)
python.py:150(pytest_pyfunc_call)                                     <-       1    0.000    1.645  _callers.py:76(_multicall)
test_git_workflows.py:2613(test_get_branch_diff_missing_base_branch)  <-       1    0.000    1.645  python.py:150(pytest_pyfunc_call)
diffs.py:92(get_branch_diff)                                          <-       1    0.000    1.492  test_git_workflows.py:2613(test_get_branch_diff_missing_base_branch)
{built-in method builtins.next}                                       <-       2    0.000    0.000  <frozen os>:288(walk)
                                                                               5    0.000    0.000  _callers.py:25(run_old_style_hookwrapper)
                                                                              26    0.000    0.000  _callers.py:76(_multicall)
                                                                              19    0.000    0.006  contextlib.py:136(__enter__)
                                                                              19    0.000    1.198  contextlib.py:145(__exit__)
                                                                               3    0.000    0.003  fixtures.py:916(call_fixture_func)
                                                                               3    0.000    0.002  fixtures.py:934(_teardown_yield_fixture)
                                                                               1    0.000    0.000  nodes.py:365(get_closest_marker)
                                                                               5    0.000    0.000  tempfile.py:243(_mkstemp_inner)
contextlib.py:145(__exit__)                                           <-       1    0.000    0.171  branches.py:14(get_current_branch_name)
                                                                               1    0.000    0.118  branches.py:319(branch_exists)
                                                                               1    0.000    0.000  capture.py:892(pytest_runtest_setup)
                                                                               1    0.000    0.000  capture.py:897(pytest_runtest_call)
                                                                               1    0.000    0.000  capture.py:902(pytest_runtest_teardown)
                                                                               3    0.000    0.000  cmd.py:233(_safer_popen_windows)
                                                                               1    0.000    0.134  diffs.py:92(get_branch_diff)
                                                                               1    0.000    0.000  logging.py:836(pytest_runtest_setup)
                                                                               1    0.000    0.000  logging.py:845(pytest_runtest_call)
                                                                               1    0.000    0.000  logging.py:852(pytest_runtest_teardown)
                                                                               3    0.000    0.775  repository.py:11(is_git_repository)
                                                                               3    0.000    0.000  subprocess.py:1345(_get_handles)
                                                                               1    0.000    0.000  warnings.py:85(pytest_runtest_protocol)
base.py:327(__del__)                                                  <-       2    0.000    0.288  diffs.py:92(get_branch_diff)
                                                                               1    0.000    0.159  runner.py:122(runtestprotocol)
                                                                               1    0.000    0.152  test_git_workflows.py:2613(test_get_branch_diff_missing_base_branch)
                                                                               3    0.000    0.401  {built-in method builtins.next}
core.py:61(_safe_repo_context)                                        <-      12    0.000    0.803  {built-in method builtins.next}
core.py:36(_close_repo_safely)                                        <-       6    0.000    0.797  core.py:61(_safe_repo_context)


