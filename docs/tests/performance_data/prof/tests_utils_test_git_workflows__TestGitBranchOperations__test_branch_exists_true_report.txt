================================================================================
PYTEST PROFILE REPORT
================================================================================

Test: tests/utils/test_git_workflows.py::TestGitBranchOperations::test_branch_exists_true
Duration: 2.563 seconds
Profile file: tests_utils_test_git_workflows__TestGitBranchOperations__test_branch_exists_true.prof

SUMMARY
--------------------------------------------------------------------------------
Wed Oct  8 07:59:44 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGitBranchOperations__test_branch_exists_true.prof

         18563 function calls (18345 primitive calls) in 2.563 seconds


TOP FUNCTIONS BY CUMULATIVE TIME
--------------------------------------------------------------------------------
This shows functions sorted by total time spent, including time in called functions.

Wed Oct  8 07:59:44 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGitBranchOperations__test_branch_exists_true.prof

         18563 function calls (18345 primitive calls) in 2.563 seconds

   Ordered by: cumulative time
   List reduced from 923 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.563    2.563 runner.py:114(pytest_runtest_protocol)
        1    0.000    0.000    2.562    2.562 runner.py:122(runtestprotocol)
    24/11    0.000    0.000    2.441    0.222 _hooks.py:497(__call__)
        3    0.000    0.000    2.441    0.814 runner.py:230(call_and_report)
    24/11    0.000    0.000    2.441    0.222 _manager.py:111(_hookexec)
    24/11    0.000    0.000    2.441    0.222 _callers.py:76(_multicall)
        3    0.000    0.000    2.440    0.813 runner.py:323(from_call)
        3    0.000    0.000    2.440    0.813 runner.py:246(<lambda>)
        1    0.000    0.000    2.005    2.005 runner.py:167(pytest_runtest_call)
        1    0.000    0.000    2.005    2.005 python.py:1669(runtest)
        1    0.000    0.000    2.004    2.004 python.py:150(pytest_pyfunc_call)
        1    0.000    0.000    2.004    2.004 test_git_workflows.py:2179(test_branch_exists_true)
       17    0.000    0.000    1.980    0.116 base.py:333(close)
       34    1.975    0.058    1.976    0.058 {built-in method gc.collect}
   100/87    0.000    0.000    1.420    0.016 {built-in method builtins.next}
       23    0.000    0.000    1.408    0.061 contextlib.py:145(__exit__)
        9    0.000    0.000    1.035    0.115 base.py:327(__del__)
       16    0.000    0.000    0.954    0.060 core.py:61(_safe_repo_context)
        8    0.000    0.000    0.945    0.118 core.py:36(_close_repo_safely)
        4    0.000    0.000    0.939    0.235 repository.py:11(is_git_repository)
        2    0.000    0.000    0.719    0.359 branches.py:319(branch_exists)
        1    0.000    0.000    0.480    0.480 branches.py:194(create_branch)
        1    0.000    0.000    0.433    0.433 runner.py:162(pytest_runtest_setup)
        1    0.000    0.000    0.433    0.433 runner.py:498(setup)
        1    0.000    0.000    0.433    0.433 python.py:1673(setup)
        1    0.000    0.000    0.433    0.433 fixtures.py:716(_fillfixtures)
     10/7    0.000    0.000    0.433    0.062 fixtures.py:527(getfixturevalue)
     14/7    0.000    0.000    0.433    0.062 fixtures.py:566(_get_active_fixturedef)
      6/5    0.000    0.000    0.433    0.087 fixtures.py:1074(execute)
        4    0.000    0.000    0.432    0.108 fixtures.py:1166(pytest_fixture_setup)
        4    0.000    0.000    0.432    0.108 fixtures.py:916(call_fixture_func)
        1    0.000    0.000    0.430    0.430 conftest.py:32(git_repo_with_files)
        1    0.000    0.000    0.354    0.354 branches.py:14(get_current_branch_name)
        4    0.000    0.000    0.285    0.071 cmd.py:1540(_call_process)
        4    0.000    0.000    0.285    0.071 cmd.py:1096(execute)
        2    0.000    0.000    0.279    0.140 cmd.py:1003(<lambda>)
        1    0.000    0.000    0.272    0.272 base.py:1126(commit)
        2    0.000    0.000    0.272    0.136 subprocess.py:1175(communicate)
        2    0.000    0.000    0.271    0.136 subprocess.py:1613(_communicate)
        4    0.000    0.000    0.271    0.068 threading.py:1056(join)
        4    0.000    0.000    0.271    0.068 {method 'join' of '_thread._ThreadHandle' objects}
      4/2    0.000    0.000    0.271    0.135 threading.py:998(_bootstrap)
      4/2    0.001    0.000    0.271    0.135 threading.py:1025(_bootstrap_inner)
      4/2    0.000    0.000    0.270    0.135 threading.py:981(run)
      4/2    0.000    0.000    0.270    0.135 subprocess.py:1608(_readerthread)
    16/14    0.000    0.000    0.270    0.019 {method 'close' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.269    0.269 commit.py:561(create_from_tree)
        1    0.000    0.000    0.259    0.259 symbolic.py:724(create)
        1    0.000    0.000    0.259    0.259 symbolic.py:680(_create)
      147    0.240    0.002    0.240    0.002 {method 'readline' of '_io.BufferedReader' objects}



TOP FUNCTIONS BY INTERNAL TIME (TIME)
--------------------------------------------------------------------------------
This shows functions sorted by time spent in the function itself (excluding subcalls).

Wed Oct  8 07:59:44 2025    docs\tests\performance_data\prof\tests_utils_test_git_workflows__TestGitBranchOperations__test_branch_exists_true.prof

         18563 function calls (18345 primitive calls) in 2.563 seconds

   Ordered by: internal time
   List reduced from 923 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       34    1.975    0.058    1.976    0.058 {built-in method gc.collect}
    12/10    0.269    0.022    0.000    0.000 {method 'read' of '_io.BufferedReader' objects}
      147    0.240    0.002    0.240    0.002 {method 'readline' of '_io.BufferedReader' objects}
       75    0.025    0.000    0.026    0.000 {built-in method _io.open}
        4    0.010    0.003    0.010    0.003 {built-in method _winapi.CreateProcess}
        6    0.005    0.001    0.005    0.001 {built-in method _winapi.WaitForSingleObject}
       12    0.002    0.000    0.002    0.000 {built-in method nt.open}
       76    0.002    0.000    0.002    0.000 {built-in method nt._path_isdir}
        8    0.002    0.000    0.002    0.000 {built-in method nt.rename}
       13    0.001    0.000    0.001    0.000 {built-in method nt.mkdir}
       22    0.001    0.000    0.001    0.000 {built-in method nt._path_exists}
       44    0.001    0.000    0.001    0.000 {method '__exit__' of '_io._IOBase' objects}
       42    0.001    0.000    0.001    0.000 {built-in method nt._path_isfile}
       24    0.001    0.000    0.001    0.000 {built-in method nt.stat}
       13    0.001    0.000    0.002    0.000 config.py:439(_read)
       11    0.001    0.000    0.001    0.000 {built-in method nt.chmod}
       11    0.001    0.000    0.001    0.000 {built-in method builtins.dir}
        1    0.001    0.001    0.001    0.001 pathlib.py:173(find_prefixed)
      4/2    0.001    0.000    0.271    0.135 threading.py:1025(_bootstrap_inner)
       33    0.001    0.000    0.001    0.000 {built-in method nt.write}
     1745    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
       21    0.001    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}
        5    0.000    0.000    0.000    0.000 {built-in method nt.remove}
       13    0.000    0.000    0.000    0.000 {built-in method nt.scandir}
       11    0.000    0.000    0.000    0.000 {built-in method nt.close}
        8    0.000    0.000    0.000    0.000 {built-in method nt._getfinalpathname}
      174    0.000    0.000    0.001    0.000 <frozen ntpath>:99(join)
        4    0.000    0.000    0.271    0.068 {method 'join' of '_thread._ThreadHandle' objects}
        9    0.000    0.000    0.011    0.001 base.py:172(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method nt.symlink}
        4    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedWriter' objects}
       11    0.000    0.000    0.001    0.000 configparser.py:1343(__init__)
       17    0.000    0.000    1.980    0.116 base.py:333(close)
     1501    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
      157    0.000    0.000    0.000    0.000 cmd.py:989(__getattribute__)
   100/87    0.000    0.000    1.420    0.016 {built-in method builtins.next}
        7    0.000    0.000    0.000    0.000 {built-in method nt.access}
      310    0.000    0.000    0.001    0.000 <frozen os>:711(__getitem__)
        7    0.000    0.000    0.000    0.000 {built-in method nt.putenv}
    24/11    0.000    0.000    2.441    0.222 _callers.py:76(_multicall)
        6    0.000    0.000    0.000    0.000 {built-in method nt.lstat}
        5    0.000    0.000    0.000    0.000 glob.py:424(select_wildcard)
      431    0.000    0.000    0.000    0.000 {built-in method nt._path_splitroot_ex}
        7    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
       11    0.000    0.000    0.002    0.000 configparser.py:629(__init__)
        6    0.000    0.000    0.000    0.000 {method 'read' of '_io.FileIO' objects}
      322    0.000    0.000    0.000    0.000 <frozen os>:785(encodekey)
       37    0.000    0.000    0.000    0.000 _local.py:257(_parse_path)
        2    0.000    0.000    0.000    0.000 {built-in method _winapi.TerminateProcess}
       18    0.000    0.000    0.015    0.001 symbolic.py:220(_get_ref_info_helper)



CALLER INFORMATION (Top 20)
--------------------------------------------------------------------------------
This shows which functions called the top functions.

   Ordered by: cumulative time
   List reduced from 923 to 20 due to restriction <20>

Function                                             was called by...
                                                         ncalls  tottime  cumtime
runner.py:114(pytest_runtest_protocol)               <- 
runner.py:122(runtestprotocol)                       <-       1    0.000    2.562  runner.py:114(pytest_runtest_protocol)
_hooks.py:497(__call__)                              <-       5    0.000    0.000  fixtures.py:1053(finish)
                                                              4    0.000    0.433  fixtures.py:1074(execute)
                                                              1    0.000    2.005  python.py:1669(runtest)
                                                              2    0.000    0.000  runner.py:114(pytest_runtest_protocol)
                                                              6    0.000    0.001  runner.py:230(call_and_report)
                                                              3    0.000    2.440  runner.py:246(<lambda>)
                                                              3    0.000    0.000  terminal.py:605(pytest_runtest_logreport)
runner.py:230(call_and_report)                       <-       3    0.000    2.441  runner.py:122(runtestprotocol)
_manager.py:111(_hookexec)                           <-   24/11    0.000    2.441  _hooks.py:497(__call__)
_callers.py:76(_multicall)                           <-   24/11    0.000    2.441  _manager.py:111(_hookexec)
runner.py:323(from_call)                             <-       3    0.000    2.440  runner.py:230(call_and_report)
runner.py:246(<lambda>)                              <-       3    0.000    2.440  runner.py:323(from_call)
runner.py:167(pytest_runtest_call)                   <-       1    0.000    2.005  _callers.py:76(_multicall)
python.py:1669(runtest)                              <-       1    0.000    2.005  runner.py:167(pytest_runtest_call)
python.py:150(pytest_pyfunc_call)                    <-       1    0.000    2.004  _callers.py:76(_multicall)
test_git_workflows.py:2179(test_branch_exists_true)  <-       1    0.000    2.004  python.py:150(pytest_pyfunc_call)
base.py:333(close)                                   <-       9    0.000    1.035  base.py:327(__del__)
                                                              8    0.000    0.945  core.py:36(_close_repo_safely)
{built-in method gc.collect}                         <-      34    1.975    1.976  base.py:333(close)
{built-in method builtins.next}                      <-       7    0.000    0.000  <frozen os>:288(walk)
                                                              5    0.000    0.000  _callers.py:25(run_old_style_hookwrapper)
                                                             26    0.000    0.000  _callers.py:76(_multicall)
                                                             23    0.000    0.009  contextlib.py:136(__enter__)
                                                             23    0.000    1.408  contextlib.py:145(__exit__)
                                                              3    0.000    0.002  fixtures.py:916(call_fixture_func)
                                                              3    0.000    0.002  fixtures.py:934(_teardown_yield_fixture)
                                                              1    0.000    0.000  nodes.py:365(get_closest_marker)
                                                              5    0.000    0.000  tempfile.py:243(_mkstemp_inner)
contextlib.py:145(__exit__)                          <-       1    0.000    0.113  branches.py:14(get_current_branch_name)
                                                              1    0.000    0.117  branches.py:194(create_branch)
                                                              2    0.000    0.242  branches.py:319(branch_exists)
                                                              1    0.000    0.000  capture.py:892(pytest_runtest_setup)
                                                              1    0.000    0.000  capture.py:897(pytest_runtest_call)
                                                              1    0.000    0.000  capture.py:902(pytest_runtest_teardown)
                                                              4    0.000    0.000  cmd.py:233(_safer_popen_windows)
                                                              1    0.000    0.000  logging.py:836(pytest_runtest_setup)
                                                              1    0.000    0.000  logging.py:845(pytest_runtest_call)
                                                              1    0.000    0.000  logging.py:852(pytest_runtest_teardown)
                                                              4    0.000    0.935  repository.py:11(is_git_repository)
                                                              4    0.000    0.000  subprocess.py:1345(_get_handles)
                                                              1    0.000    0.000  warnings.py:85(pytest_runtest_protocol)
base.py:327(__del__)                                 <-       1    0.000    0.121  runner.py:122(runtestprotocol)
                                                              4    0.000    0.452  test_git_workflows.py:2179(test_branch_exists_true)
                                                              4    0.000    0.462  {built-in method builtins.next}
core.py:61(_safe_repo_context)                       <-      16    0.000    0.954  {built-in method builtins.next}
core.py:36(_close_repo_safely)                       <-       8    0.000    0.945  core.py:61(_safe_repo_context)
repository.py:11(is_git_repository)                  <-       1    0.000    0.239  branches.py:14(get_current_branch_name)
                                                              1    0.000    0.226  branches.py:194(create_branch)
                                                              2    0.000    0.474  branches.py:319(branch_exists)


